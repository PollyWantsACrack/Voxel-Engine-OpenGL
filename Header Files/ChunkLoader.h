#pragma once
#include <iostream>
#include <fstream>
class ChunkLoader
{
public:
	ChunkLoader() = default;
	
	void genChunk(int hori,int vert,int dept)
	{
        std::ofstream outf{ "C:/Users/Franek/source/repos/OpenGL/Vertices Data/chunkVertices.txt",std::ios::trunc };
        if (!outf)
        {
            std::cerr << "Uh oh, C: / Users / Franek / source / repos / OpenGL / Vertices Data / chunkVertices.txt could not be opened for writing!\n";
        }
        for (int x = 0;x < hori;x++)
        {
            for (int y = 0;y < vert;y++)
            {
                for (int z = 0;z < dept;z++)
                {
                    
                        // przod (z = 0)
                    outf << " " << 0.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 0.0 << "\n"
                        << " " << 1.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 1.0 << " " << 0.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 0.0 + z << " " << 1.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 0.0 + z << " " << 1.0 << " " << 1.0 << "\n"
                        << " " << 0.0 + x << " " << 1.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n"
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 0.0 << "\n"

                        // tyl (z = 1)
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 1.0 + z << " " << 0.0 << " " << 0.0 << "\n"
                        << " " << 1.0 + x << " " << 0.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 1.0 << "\n"
                        << " " << 0.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 0.0 << " " << 1.0 << "\n"
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 1.0 + z << " " << 0.0 << " " << 0.0 << "\n"

                        // lewo (x = 0)
                        << " " << 0.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"
                        << " " << 0.0 + x << " " << 1.0 + y << " " << 0.0 + z << " " << 1.0 << " " << 1.0 << "\n"
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n"
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n"
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 1.0 + z << " " << 0.0 << " " << 0.0 << "\n"
                        << " " << 0.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"

                        // prawo (x = 1)
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 0.0 + z << " " << 1.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 0.0 + y << " " << 1.0 + z << " " << 0.0 << " " << 0.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"

                        // dol (y = 0)
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 1.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 0.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"
                        << " " << 1.0 + x << " " << 0.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 1.0 + z << " " << 0.0 << " " << 0.0 << "\n"
                        << " " << 0.0 + x << " " << 0.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n"

                        // gora (y = 1)
                        << " " << 0.0 + x << " " << 1.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 0.0 + z << " " << 1.0 << " " << 1.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"
                        << " " << 1.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 1.0 << " " << 0.0 << "\n"
                        << " " << 0.0 + x << " " << 1.0 + y << " " << 1.0 + z << " " << 0.0 << " " << 0.0 << "\n"
                        << " " << 0.0 + x << " " << 1.0 + y << " " << 0.0 + z << " " << 0.0 << " " << 1.0 << "\n";







                }
            }
        }
        outf.close();

        std::ofstream outf1{ "C:/Users/Franek/source/repos/OpenGL/Vertices Data/textureNum.txt",std::ios::trunc };
        if (!outf1)
        {
            std::cerr << "Uh oh, C: / Users / Franek / source / repos / OpenGL / Vertices Data / textureNum.txt could not be opened for writing!\n";
        }
        for (size_t x = 0; x < 2; x++)
        {
            for (size_t y = 0; y < 2; y++)
            {
                for (size_t z = 0; z < 2; z++)
                {
                    outf1 << x << " " << y << " " << z << "\n";
                }
            }
        }
        outf1.close();
	}

};